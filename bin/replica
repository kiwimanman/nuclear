#!/usr/bin/env ruby
require 'nuclear'
require 'thor'

class Replica < Thor

  desc "start ID", "start at a port (also serves as the id)"
  def start(id)
    puts "Starting at #{id}"
    handler = Nuclear::Handlers::Replica.new(id)
    processor = Nuclear::Replica::Processor.new(handler)
    transport = Thrift::ServerSocket.new(id)
    transportFactory = Thrift::BufferedTransportFactory.new()
    server = Thrift::SimpleServer.new(processor, transport, transportFactory)

    threads = []
    threads << Thread.new {
      puts "Starting the replica server..."
      server.serve()
    }
    Thread.new {
      loop do
        begin
          handler.check_timeouts
          handler.gossip
        rescue
          puts "Timeout and gossip failed"
        ensure
          sleep handler.timeout
        end
      end
    }
    threads.each { |thr| thr.join }

    puts "done."
  end

end

Replica.start(ARGV)